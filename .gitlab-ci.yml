
stages:
  - build
  - scan

# build job
.maven_build:
  # run this job in the build stage
  stage: build

  # we require a runner that has docker
  tags:
    - docker

  # actually do the work - as a script (series of commands to execute)
  #   need to install the basic tools on the Docker image (maven & java)
  script:
    - echo "Building"
    - uname -a                                            # just because
    - apt-get update
    - apt-get --assume-yes install openjdk-8-jdk
    - apt-get --assume-yes install maven
    - javac -version                                      # test
    - mvn --version                                       # test
    - mvn package

  # save the output from this job  
  artifacts:
    paths:
      - target/*.jar

# scan job
veracode_scan:
  # run this job in the scan stage
  stage: scan

  # we require a linux-based runner that has docker
  tags:
    - linux
    - docker

  # we need the output of the build job as input to this job
  #dependencies:
  #  - maven_build

  script:
    - echo "Upload & scan"
    - apt-get update
    - apt-get --assume-yes install openjdk-8-jdk
    - apt-get --assume-yes install maven
    - javac -version                                    # test
    - mvn --version                                     # test
    # get the Veracode API wrappers
    - mvn dependency:get -Dartifact=com.veracode.vosp.api.wrappers:vosp-api-wrappers-java:17.11.4.9
    # find out where maven put the API wrappers
    # - MVN_HOME=`mvn help:evaluate -Dexpression=settings.localRepository | grep -v '\[INFO\]'`
    - MVN_HOME=`mvn help:evaluate -Dexpression=settings.localRepository | grep .m2`
    - echo maven home = $MVN_HOME
    - echo end maven home

